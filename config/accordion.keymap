/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */



#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 10    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/pointing.h>

// HOST_OS: Linux=1, MacOS=2
#define HOST_OS 1
#include "zmk-helpers/helper.h"



// Delay for combo
#undef COMBO_TERM
#define COMBO_TERM 250

// #define NAV_TAP_TERM 300
// #define TAPDANCE_2_TERM 250
// #define TAPDANCE_3_TERM 350
#define HOLDTAP_TERM 350
#define HOLDTAP_LAYER_TERM 350
#define TIMEOUT_STICKY_LEADER_KEY  2000

&sk {
  release-after-ms = <TIMEOUT_STICKY_LEADER_KEY>;
  quick-release;
};
&sl { 
  release-after-ms = <TIMEOUT_STICKY_LEADER_KEY>;
};
&mt {
  tapping-term-ms = <HOLDTAP_TERM>;
};
&lt {
  tapping-term-ms = <HOLDTAP_LAYER_TERM>;
};


// Switches/keys Top to Bottom, Left to Right
#define T1 0
#define T2 1
#define T3 2

#define T4 3
#define T5 4
#define T6 5


#define M1 6
#define M2 7
#define M3 8

#define M4 9
#define M5 10
#define M6 11

#define B1 12
#define B2 13
#define B3 14

#define B4 15
#define B5 16
#define B6 17

#define L_AL1 0
#define L_AL2 1
#define L_NUM 2
#define L_PAR 3
#define L_SYM 4 
#define L_ACC 5
#define L_EDT 6
#define L_NAV 7
#define L_MSE 8
#define L_FUN 9
#define L_BLE 10



// #include "keyabbrev.dtsi"
#include "characters.conf"
#include "combonames.conf"
// #include "timeouts.dtsi"
// #include "behaviors.dtsi"

&mmv {
  time-to-max-speed-ms = <0>;
  acceleration-exponent = <0>;
};

&msc {
  time-to-max-speed-ms = <0>;
  acceleration-exponent = <0>;
};




/ { behaviors {
  
  hm: homerow_mods {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    tapping-term-ms = <300>;
    quick-tap-ms = <250>;
    require-prior-idle-ms = <250>;
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;
  };
  
  hl: homerow_layers {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    tapping-term-ms = <300>;
    quick-tap-ms = <250>;
    require-prior-idle-ms = <250>;
    flavor = "tap-preferred";
    bindings = <&mo>, <&kp>;
    retro-tap;
  };
  
  bspc_del: backspace_delete {
    compatible = "zmk,behavior-mod-morph";
    #binding-cells = <0>;
    bindings = <&kp BACKSPACE>, <&kp DELETE>;
    mods = <(MOD_LSFT|MOD_RSFT)>;
    keep-mods = <(MOD_LCTL|MOD_RCTL|MOD_RSFT)>;
  };
  
}; };

#define HLA(key) &hm LALT key
#define HLC(key) &hm LCTRL key
#define HRC(key) &hm RCTRL key
#define HLS(key) &hm LSHIFT key
#define HRS(key) &hm RSHIFT key


#define CB4(keypos, name, bindings, layers) \
  ZMK_COMBO(name, bindings, keypos, layers)


#define CB3(keypos, name, bindings) \
  ZMK_COMBO(name, bindings, keypos)
  
  
// Combos L_NAV

CB4(LMM_, mute, &mt K_PP K_MUTE, L_NAV)


// Combos L_MSE
CB4(RT_T, mmid, M_B3, L_MSE)
CB4(RTT_, mbck, M_B4, L_MSE)
CB4(R_TT, mfwd, M_B5, L_MSE)

// Combos L_PAR, used for dev like -> => </>
CB4(RMM_, p_dash, &kp MINUS, L_PAR)
CB4(R_MM, p_eq  , &kp EQUAL, L_PAR)
CB4(RMT_, p_slsh, &kp FSLH , L_PAR)

// combos L_NUM
CB4(RMM_, n_euro, &kp EURO, L_NUM)
CB4(R_MM, n_gbp , &kp GBP , L_NUM)


// Combos Base layer
CB4(LTT_, esca, &kp ESC        , L_AL1)
CB4(L_TT, tabs, &mt LS(TAB) TAB, L_AL1)
CB4(LT_T, caps, &kp CAPS       , L_AL1)
CB4(LTTT, lgui, &sk LGUI       , L_AL1)
CB4(RTT_, bksp, &kp BACKSPACE  , L_AL1)
CB4(R_TT, dele, &kp DELETE     , L_AL1)
CB4(RTTT, rgui, &sk RGUI       , L_AL1)
CB4(RT_T, ralt, &sk RALT       , L_AL1)

CB4(RMM_, left, &mt HOME LEFT  , L_AL1)
CB4(R_MM, rght, &mt END  RIGHT , L_AL1)
CB4(RM_M, up  , &kp UP         , L_AL1)
CB4(RMMM, down, &kp DOWN       , L_AL1)


CB4(L_XX, reflash , &bootloader, L_AL1)
CB4(LX_X, blutooth, &sl L_BLE  , L_AL1)


// ①②③④⑤⑥⑦⑧⑨⑩⑪⑫⑴⑵⑶⑷⑸⑹⑺⑻⑼⑽⑾⑿⓵⓶⓷⓸⓹⓺⓻⓼⓽⓾⓫⓬



/ { keymap { compatible = "zmk,keymap";
  alpha1 {
    display-name = "Alpha 1";
    bindings = <
      HLS(C)        HLA(L)       HLC(D)         HRC(U)       HLA(O)       HRS(M)
      &hl L_PAR S   &hl L_MSE T  &hl L_NAV H    &mt L_ACC A  &mt L_EDT E  &hl L_SYM N
      &hl L_NUM R                &kp SPACE      &sl L_AL2                 &hl L_FUN I
      
    >;
  };
  alpha2 {
    display-name = "Alpha 2";
    bindings = <
      &kp B   &kp P   &kp V    &kp F   &kp Q   &kp Y
      &kp J   &kp G   &kp K    &kp X   &kp Z   &kp W
      TODO            TODO     TODO            &kp ENTER    
    >;
  };
  numbers {
    display-name = "Numbers+Math";
    bindings = <
      &mt FSLH STAR  &mt PERCENT PLUS  &kp MINUS        &mt DOLLAR N4  &mt EURO N5  &mt GBP N6
      &kp     N7     &kp      N8       &kp        N9    &mt EXCL N1    &mt SUP2 N2  &kp N3
      &mo L_NUM                        &mt HASH EQUAL   &mt DEGREE N0               &mt COMMA DOT
      
    >;
  };
  
  parentheses {
    display-name = "Parentheses";
    bindings = <
      MAYBE      &kp LBRC  &kp RBRC    &kp LT    &kp GT    &kp EQUAL
      &mo L_PAR  &kp LBKT  &kp RBKT    &kp LPAR  &kp RPAR  &kp SEMI
      TODO                 &kp GRAVE   &kp DQT             &kp SQT 
    >;
  };
  
  
// TODO  punctuation; accents; edit shortcuts; macro words
// TODO  E_PRINT

// 
// Maybe: +-=; 
// maybe not: ¥¡÷×«»“”¶¿
// dead grave tilde acute circ dier macron?
  
//   ~@     &   _  

// !? ,; .:         /\ #* $ +- = @
  symbols {
    display-name = "Symbols";
    bindings = <
      &mt HASH STAR  &kp PLUS   &kp MINUS     &kp SEMI   &kp COLON  MAYBE
      &mt BSLH FSLH  &kp CARET  &kp DOLLAR    &kp COMMA  &kp DOT    &mo L_SYM
      TODO                      TODO          TODO                  &mt EXCL QMARK
    >;
  };
  
  
  
  accents {
    display-name = "Accents";
    bindings = <
      &kp C_CDL  TODO  TODO    MAYBE      &kp D_CRC  &kp D_DRS
      &kp S_SRP  TODO  TODO    &mo L_ACC  &kp D_ACU  &kp D_GRV
      TODO             TODO    TODO                  &kp D_TLD
    >;
  };
  
  editing {
    display-name = "Edit shortcuts";
    bindings = <
      TODO TODO TODO    TODO TODO      TODO
      TODO TODO TODO    TODO &mo L_EDT TODO
      TODO      TODO    TODO           TODO      
    >;
  };
  
  
  navigation {
    display-name = "Navigation+Media";
    bindings = <
      &kp LSHIFT  &kp LALT  &kp LCTRL      &kp HOME   &kp UP    &kp END
      MM_VD       MM_VU     &mo L_NAV      &kp LEFT   &kp DOWN  &kp RIGHT
      NN_PREV               NN_NEXT        &kp PG_UP            &kp PG_DN 
      
    >;
  };
   
  
  mouse {
    display-name = "Mouse";
    bindings = <
      &kp LSHIFT  &kp LALT   &kp LCTRL   M_B1   M_MU    M_B2
      M_B2        &mo L_MSE  M_B1        M_ML   M_MD    M_MR
      TODO                   &kp LALT    M_SU           M_SD 
      
      
    >;
  };

  
  functions {
    display-name = "Functions";
    bindings = <
      HLS(F4)  HLA(F5)  HLC(F6)   HRC(F10)  HLA(F11)  HRS(F12)
      &kp F1   &kp F2   &kp F3    &kp F7    &kp F8    &kp F9
      XX                XX        XX                  &mo L_FUN  
      
    >;
  };
  
  
  bluetooth {
    display-name = "Bluetooth";
    bindings = <
      TODO  TODO  &out OUT_USB    &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 5
      TODO  TODO  &out OUT_BLE    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2
      TODO        TODO            TODO                        TODO 
      // TODO: &bt BT_CLR
    >;
  };
  
  

}; };

